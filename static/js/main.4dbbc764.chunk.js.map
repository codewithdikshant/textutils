{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","role","placeholder","onClick","toggleMode","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newtext","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","defaultProps","aboutText","Alert","alert","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4dbbc764.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">\r\n                    {props.title}\r\n                </a>\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#navbarSupportedContent\"\r\n                    aria-controls=\"navbarSupportedContent\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\"  to=\"/home\">Home</Link> */}\r\n                            <a className=\"nav-link active\"  href=\"#\">Home</a>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                    <form className=\"d-flex\" role=\"search\">\r\n                        <input\r\n                            className=\"form-control me-2\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search\"\r\n                            aria-label=\"Search\"\r\n                        />\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n                    <div className={`form-check form-switch ${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input mx-2\"  onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" aria-checked=\"true\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label mx-2\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired, \r\n    aboutText: PropTypes.string.isRequired \r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About' \r\n};\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        //console.log(\"Uppercase was clicked\" + text);\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        //console.log(\"Uppercase was clicked\" + text);\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        //console.log(\"Uppercase was clicked\" + text);\r\n        let newtext = '';\r\n        setText(newtext);\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n\r\n\r\n\r\n    // eslint-disable-next-line no-unused-vars \r\n    const handleOnChange = (event)=>{\r\n        console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopy = () =>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Spaces Removed!\", \"success\");\r\n    }\r\n    \r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [text, setText] = useState('');\r\n    // text = \"new text\"; Wrong way to change the state\r\n    // setText = (\"new text\"); Correct way to change the state\r\n    return (\r\n        <>\r\n        <div className='container' style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h1>{props.heading}</h1> \r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className='container my-3' style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(\" \").length} Words and {text.length} characters</p>\r\n            <p>{0.008 *text.split(\" \").length} Minutes Read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //Whether Dark mode is enabled or not\n  const [alert, setAlert] = useState('null');\n\n  const showAlert = (message, type) =>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() =>{\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () =>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\"> \n          {/* <Routes>\n            <Route exact path=\"/about\" element={<About/>} >\n            </Route>\n            <Route exact path=\"/home\" element= */}\n            {<TextForm showAlert={showAlert} heading=\"Enter your text to Analyse below\" mode={mode}/>}\n            {/* </Route>\n          </Routes> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}